<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>netty :: Examples</name>
    <url>https://github.com/sanshengshui</url>
    <inceptionYear>2018</inceptionYear>


    <groupId>com.sanshengshui</groupId>
    <artifactId>let_netty_easy</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <logback.version>1.2.3</logback.version>
        <junit-jupiter.version>5.5.2</junit-jupiter.version>
        <mockito.version>1.10.19</mockito.version>
    </properties>


    <modules>
        <!-- 基础 - 入门篇 start-->
        <!-- netty 之 helloworld详解-->
        <module>netty-helloworld</module>
        <!-- netty 之 实现高性能http服务器-->
        <module>netty-http</module>
        <!-- netty 之 响应式编程-->
        <module>netty-webflux</module>
        <!-- netty 之 netty整合springboot并使用protobuf进行数据传输-->
        <module>netty-springboot-protobuf</module>
        <!--netty之 netty 整合 Kafka producer-->
        <!-- 基础 - 入门篇 end-->

        <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <!-- 中级 - 数据流传输篇 start-->
        <module>netty-kafka</module>
        <!--netty之jpa持久化数据至MySql-->
        <module>netty-jpa-mysql</module>
        <!--netty之mybaits持久化数据之mongodb中-->
        <module>netty-mybatis-mongodb</module>
        <!-- 中级 - 数据流传输篇 start-->

        <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <!-- 高级 - 高级应用篇 start-->
        <!--netty之 基于netty通讯实现rpc-->
        <module>netty-rpc</module>
        <!--netty之用netty实现IM功能(物联网,推送皆可！)-->
        <module>netty-im</module>
        <!--netty之netty实现IOT服务器-->
        <module>netty-iot</module>
        <!-- 高级 - 高级应用篇 end-->

        <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <!-- 高级 - Netty特性,源码篇 start-->
        <module>netty-design-patterns-chain-of-responsibility</module>
        <module>netty-design-patterns-singleton</module>
        <module>netty-design-patterns-iterator</module>
        <module>netty-design-patterns-decorator</module>
        <!-- 高级 - Netty特性,源码篇 end -->

    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>